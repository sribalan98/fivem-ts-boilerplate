import{readdir as p}from"fs/promises";async function f(...r){return(await Promise.all(r.map(async i=>{try{let t=await p(`${i}/`,{withFileTypes:!0});return(await Promise.all(t.map(async c=>{let e=`${i}/${c.name}`;return c.isDirectory()?await f(e):e}))).flat()}catch{return[]}}))).flat()}import{readFile as m}from"fs/promises";async function l(r){return JSON.parse(await m(r,"utf8"))}import d from"esbuild";import{writeFile as g}from"fs/promises";async function O(r,s,i,t){let a={},c=[{name:"build",setup(e){e.onEnd(async o=>{o.errors.length===0&&console.log(`Successfully built ${e.initialOptions.outfile}`)})}}];await Promise.all(i.map(async({name:e,options:o})=>{a[e]=`dist/${e}.js`,o={bundle:!0,entryPoints:[`./src/${e}/index.ts`],outfile:a[e],keepNames:!0,legalComments:"inline",treeShaking:!0,...s,...o},o.plugins=[...o.plugins||[],...c];let n=await d.context(o).catch(()=>process.exit(1));return r?n.watch():n.rebuild()})),await g(".yarn.installed",new Date().toISOString()),await t(a),r||process.exit(0)}import{writeFile as x}from"fs/promises";function u(r,s){return s?.[0]?`
${r} {${s.reduce((i,t)=>t?`${i}
	'${t}',`:i,"")}
}
`:""}function y(r){return Object.entries(r).reduce((s,[i,t])=>t?`${s}${i} '${t}'
`:s,"")}async function S({client_scripts:r,server_scripts:s,shared_scripts:i,files:t,dependencies:a,metadata:c}){let e=await l("package.json"),o={name:e.name,author:e.author,version:e.version,license:e.license,repository:e.repository?.url,description:e.description,fx_version:"cerulean",game:"gta5",...c||{}},n=y(o);return n+=u("files",t),n+=u("client_scripts",r),n+=u("server_scripts",s),n+=u("shared_scripts",i),n+=u("dependencies",a),await x("fxmanifest.lua",n),n}export{O as createBuilder,S as createFxmanifest,f as getFiles,l as readJson};
//# sourceMappingURL=index.js.map
